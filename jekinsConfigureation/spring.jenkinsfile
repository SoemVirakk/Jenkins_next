@Library(['my-share-library']) _

pipeline {
    agent any
    environment {
        DOCKER_TAG  = "${BUILD_NUMBER}"
    }
    parameters{
        booleanParam(name: "TEST _BOOLEN", defaulValue: true, desription: "Sample")
        string(name: "TEST_STRING" defaulValue:"dara", trim: true, description: "Sample")
        text(name:"TEST_TEXT", defaulValue:"Jenkins Pipelin Tutorial ", description: "text parameter")
        password(name: "TEST_PASSWORD", defaulValue: "SECRET", decription:"Sample"
        choise(name:"TEST_CHOICE", chiose:["production", "staging","development","multi-choise-parameter" ]))

    }  
    stages {
        stage('Git Hub clone') {
            steps {
                git branch: 'main', url: 'https://github.com/SoemVirakk/spring_test.git'
            }
        }

        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }

        stage('Write Docker file to git repository') {
            steps {
                script {
                    apiWithDocker(
                        // DOCKER_USER = 'Soemvirak93gmail.com',
                        // DOCKER_PASS = 'User$2025',
                        TAGS = ${env.BUILD_NUME}
                 //       IMAGE_NAME = 'SpringDocker'
                    )
                }
            }
        }
        stege('Build Docker Image'){
            steps{
                script{
                    echo "Build Docker Image: ${registry}/ $image: ${tag}"
                    sh """
l                    """
                }
            }
        }

        stage('List dir') {
            steps {
                sh "ls -lrt"
            }
        }
    }
}
